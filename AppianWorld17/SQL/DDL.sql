CREATE TABLE NTS_GAME (
	ID INT(11) NOT NULL PRIMARY KEY AUTO_INCREMENT,
	START_TIME DATETIME,
	FIRST_NAME VARCHAR(255),
	LAST_NAME VARCHAR(255),
	ORGANIZATION VARCHAR(255),
	TITLE VARCHAR(255),
	EMAIL VARCHAR(255),
	REASON VARCHAR(4000)
);

CREATE TABLE NTS_SHOT (
	ID INT(11) NOT NULL PRIMARY KEY AUTO_INCREMENT,
	NTS_GAME_ID INT(11),
	POINTS INT(11),
	SHOT_TIME DATETIME
);

ALTER TABLE NTS_SHOT
	ADD KEY FK_SHOT_NTS_GAME_ID (NTS_GAME_ID);
	
ALTER TABLE NTS_SHOT
	ADD CONSTRAINT FK_SHOT_NTS_GAME_ID FOREIGN KEY (NTS_GAME_ID) REFERENCES NTS_GAME (ID) ON DELETE NO ACTION ON UPDATE NO ACTION;
	
CREATE OR REPLACE VIEW NTS_GAME_POINTS AS
SELECT
	g.ID AS ID,
	COALESCE(SUM(s.POINTS), 0) AS POINTS,
	COUNT(s.ID) AS SHOTS
FROM NTS_GAME g
LEFT JOIN NTS_SHOT s
ON g.ID = s.NTS_GAME_ID
GROUP BY g.ID;

CREATE OR REPLACE VIEW NTS_LEADERBOARD AS
SELECT 
	g.ID AS ID,
	(select 1+COUNT(*)
	from NTS_GAME_POINTS gp2
	where gp2.POINTS > gp.POINTS) AS RANK,
	gp.POINTS AS POINTS,
	gp.SHOTS AS SHOTS,
	g.START_TIME AS START_TIME,
	CASE
		WHEN g.FIRST_NAME IS NULL AND g.LAST_NAME IS NULL
		THEN 'Unknown Player'
		ELSE CONCAT(g.FIRST_NAME, ' ', g.LAST_NAME)
	END	AS NAME,
	g.ORGANIZATION AS ORGANIZATION
FROM NTS_GAME g
JOIN NTS_GAME_POINTS gp ON gp.ID = g.id;